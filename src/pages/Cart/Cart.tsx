import { useState } from 'react'
import { Link } from 'react-router-dom'
import { useCartStore } from '../../store/cartStore'
import { Breadcrumbs } from '../../components/Breadcrumbs/Breadcrumbs'
import { SEO } from '../../components/SEO/SEO'
import styles from './Cart.module.css'

interface FormData {
  name: string
  phone: string
  address: string
  contactMethod: '–¢–µ–ª–µ—Ñ–æ–Ω' | 'telegram' | 'whatsapp' | 'viber'
  paymentMethod: '–ö–∞—Ä—Ç–∞' | '–ù–∞–ª–∏—á–Ω—ã–µ'
  promoCode?: string
  telegram?: string
  whatsapp?: string
  viber?: string
}

interface FormErrors {
  name?: string
  phone?: string
  address?: string
  contactMethod?: string
  paymentMethod?: string
  submit?: string
  telegram?: string
  whatsapp?: string
  viber?: string
}

const TELEGRAM_BOT_TOKEN = '8125343989:AAEoT5kUFJaziP1OIF9cDvuB_mcqY2oKuPQ'
const TELEGRAM_CHAT_ID = '@dilaviatest2233'

export default function Cart() {
  const { items, removeFromCart, updateQuantity, clearCart } = useCartStore()
  const [promoCode, setPromoCode] = useState('')
  const [appliedPromo, setAppliedPromo] = useState<string | null>(null)
  const [promoError, setPromoError] = useState<string | null>(null)
  const [isCheckout, setIsCheckout] = useState(false)
  const [formData, setFormData] = useState<FormData>({
    name: '',
    phone: '',
    address: '',
    contactMethod: '–¢–µ–ª–µ—Ñ–æ–Ω',
    paymentMethod: '–ö–∞—Ä—Ç–∞'
  })
  const [submitStatus, setSubmitStatus] = useState<'idle' | 'success' | 'error'>('idle')
  const [formErrors, setFormErrors] = useState<FormErrors>({})
  const [isSubmitting, setIsSubmitting] = useState(false)

  const handleQuantityChange = (id: string, quantity: number) => {
    if (quantity < 1) return
    updateQuantity(id, quantity)
  }

  const handleRemove = (id: string) => {
    removeFromCart(id)
  }

  const handlePromoSubmit = (e: React.FormEvent) => {
    e.preventDefault()
    setPromoError(null)

    if (promoCode.toLowerCase() === 'sale5') {
      setAppliedPromo(promoCode)
      setPromoCode('')
    } else {
      setPromoError('–ù–µ–≤–µ—Ä–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥')
    }
  }

  const handleRemovePromo = () => {
    setAppliedPromo(null)
  }

  const validateForm = () => {
    const newErrors: FormErrors = {}

    if (!formData.name.trim()) {
      newErrors.name = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è'
    } else if (formData.name.length < 2) {
      newErrors.name = '–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞'
    }

    if (!formData.phone.trim()) {
      newErrors.phone = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞'
    }

    if (!formData.address.trim()) {
      newErrors.address = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏'
    } else if (formData.address.length < 10) {
      newErrors.address = '–ê–¥—Ä–µ—Å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤'
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π –¥–ª—è —Å–ø–æ—Å–æ–±–æ–≤ —Å–≤—è–∑–∏
    switch (formData.contactMethod) {
      case 'telegram':
        if (!formData.telegram?.trim()) {
          newErrors.telegram = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à Telegram'
        } else if (!formData.telegram.startsWith('@')) {
          newErrors.telegram = 'Telegram –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å @'
        }
        break
      case 'whatsapp':
        if (!formData.whatsapp?.trim()) {
          newErrors.whatsapp = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à WhatsApp'
        }
        break
      case 'viber':
        if (!formData.viber?.trim()) {
          newErrors.viber = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à Viber'
        }
        break
    }

    setFormErrors(newErrors)
    return Object.keys(newErrors).length === 0
  }

  const handleFormChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {
    const { name, value } = e.target

    if (name === 'contactMethod') {
      setFormData(prev => ({
        ...prev,
        [name]: value as FormData['contactMethod'],
        // –û—á–∏—â–∞–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø–æ–ª—è –ø—Ä–∏ —Å–º–µ–Ω–µ —Å–ø–æ—Å–æ–±–∞ —Å–≤—è–∑–∏
        telegram: value === 'telegram' ? prev.telegram : '',
        whatsapp: value === 'whatsapp' ? prev.whatsapp : '',
        viber: value === 'viber' ? prev.viber : ''
      }))
      setFormErrors({})
      return
    }

    if (name === 'phone') {
      // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –≤–≤–æ–¥ —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä–∞–º–∏
      const numbers = value.replace(/\D/g, '')
      setFormData(prev => ({
        ...prev,
        phone: numbers
      }))
    } else {
      setFormData(prev => ({
        ...prev,
        [name]: value
      }))
    }

    // –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫—É –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–ª—è
    if (formErrors[name as keyof FormErrors]) {
      setFormErrors(prev => ({
        ...prev,
        [name]: undefined
      }))
    }
  }

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    setIsSubmitting(true)
    setFormErrors({})

    if (!validateForm()) {
      setIsSubmitting(false)
      return
    }

    try {
      // –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–ø–æ—Å–æ–±–µ —Å–≤—è–∑–∏
      let contactInfo = `–°–ø–æ—Å–æ–± —Å–≤—è–∑–∏: ${formData.contactMethod}`
      switch (formData.contactMethod) {
        case 'telegram':
          contactInfo += ` (${formData.telegram})`
          break
        case 'whatsapp':
          contactInfo += ` (${formData.whatsapp})`
          break
        case 'viber':
          contactInfo += ` (${formData.viber})`
          break
      }

      // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–≤–∞—Ä–∞—Ö
      const productsMessage = productItems.map(item =>
        `‚Ä¢ ${item.name}
  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${item.quantity}
  ${item.dimension ? `–†–∞–∑–º–µ—Ä: ${item.dimension.width}x${item.dimension.length}` : ''}
  ${item.additionalOption ? `–î–æ–ø. –æ–ø—Ü–∏—è: ${item.additionalOption.name}` : ''}
  –¶–µ–Ω–∞: ${item.price} BYN
  –ò—Ç–æ–≥–æ: ${item.price * item.quantity} BYN`
      ).join('\n')

      // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–∫–∞–Ω—è—Ö
      const fabricsMessage = fabricItems.length > 0
        ? `\nüßµ –¢–∫–∞–Ω–∏:\n${fabricItems.map(item =>
          `‚Ä¢ ${item.name}
  –¶–≤–µ—Ç: ${item.configuration?.color || '–ù–µ —É–∫–∞–∑–∞–Ω'}`
        ).join('\n')}`
        : ''

      const message = `üõç –ù–æ–≤—ã–π –∑–∞–∫–∞–∑!

üë§ –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:
–ò–º—è: ${formData.name}
–¢–µ–ª–µ—Ñ–æ–Ω: ${formData.phone}
–ê–¥—Ä–µ—Å: ${formData.address}
${contactInfo}
–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: ${formData.paymentMethod}
${formData.promoCode ? `–ü—Ä–æ–º–æ–∫–æ–¥: ${formData.promoCode}` : ''}

üì¶ –ó–∞–∫–∞–∑–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã:
${productsMessage}${fabricsMessage}

üí∞ –ò—Ç–æ–≥–æ:
–ü–æ–¥—ã—Ç–æ–≥: ${subtotal} BYN
${discount > 0 ? `–°–∫–∏–¥–∫–∞: -${discount} BYN` : ''}
–ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞: ${totalPrice} BYN`

      if (!message.trim()) {
        throw new Error('Message cannot be empty')
      }

      const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          chat_id: TELEGRAM_CHAT_ID,
          text: message,
          parse_mode: 'HTML',
        }),
      })

      const data = await response.json()

      if (!data.ok) {
        console.error('Telegram API Error:', data)
        if (data.error_code === 400 && data.description.includes('chat not found')) {
          throw new Error('–ë–æ—Ç –Ω–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –≥—Ä—É–ø–ø–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø—É –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –ø—Ä–∞–≤–∞ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π.')
        }
        throw new Error(data.description || 'Failed to send message to Telegram')
      }

      clearCart()
      setSubmitStatus('success')
    } catch (error) {
      console.error('Error sending order:', error)
      setFormErrors(prev => ({
        ...prev,
        submit: error instanceof Error ? error.message : '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
      }))
      setSubmitStatus('error')
    } finally {
      setIsSubmitting(false)
    }
  }

  // –†–∞–∑–¥–µ–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã –Ω–∞ –æ–±—ã—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã –∏ —Ç–∫–∞–Ω–∏
  const fabricItems = items.filter(item => item.id.includes('-') && item.price === 0)
  const productItems = items.filter(item => !item.id.includes('-') || item.price > 0)

  const subtotal = productItems.reduce((sum, item) => sum + item.price * item.quantity, 0)
  const discount = appliedPromo ? subtotal * 0.05 : 0
  const totalPrice = subtotal - discount

  if (items.length === 0 && !isCheckout) {
    return (
      <>
        <SEO
          title="–ö–æ—Ä–∑–∏–Ω–∞ | DILAVIA - –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω –º–µ–±–µ–ª–∏"
          description="–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–µ DILAVIA. –î–æ–±–∞–≤–ª—è–π—Ç–µ –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏–µ—Å—è —Ç–æ–≤–∞—Ä—ã, –æ—Ñ–æ—Ä–º–ª—è–π—Ç–µ –∑–∞–∫–∞–∑ —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π –ø–æ –≤—Å–µ–π –ë–µ–ª–∞—Ä—É—Å–∏. –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –ú–∏–Ω—Å–∫—É."
          keywords="–∫–æ—Ä–∑–∏–Ω–∞, –∑–∞–∫–∞–∑ –º–µ–±–µ–ª–∏, –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞, –¥–æ—Å—Ç–∞–≤–∫–∞ –º–µ–±–µ–ª–∏, DILAVIA, –î–∏–ª–∞–≤–∏—è, –î–∏–ª–∞–≤–∏–∞, –¥–∏–ª–∞–≤–∏–∞, –¥–∏–ª–∞–≤–∏—è, –∫—É–ø–∏—Ç—å –º–µ–±–µ–ª—å"
        />
        <div className={styles.container}>
          <Breadcrumbs items={[
            { name: '–ì–ª–∞–≤–Ω–∞—è', path: '/' },
            { name: '–ö–æ—Ä–∑–∏–Ω–∞', path: '/cart' },
          ]} />
          <h1 className={styles.title}>–ö–æ—Ä–∑–∏–Ω–∞</h1>
          <div className={styles.empty}>
            <p>–í –∫–æ—Ä–∑–∏–Ω–µ –ø–æ–∫–∞ –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤</p>
            <Link to="/catalog" className={styles.continueShopping}>
              –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥
            </Link>
          </div>
        </div>
      </>
    )
  }

  if (submitStatus === 'success') {
    return (
      <>
        <SEO
          title="–ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω | DILAVIA - –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω –º–µ–±–µ–ª–∏"
          description="–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–µ DILAVIA! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –∏ —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –¥–æ—Å—Ç–∞–≤–∫–∏."
          keywords="–∑–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞, DILAVIA, –º–µ–±–µ–ª—å–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω, –¥–æ—Å—Ç–∞–≤–∫–∞ –º–µ–±–µ–ª–∏"
        />
        <div className={styles.container}>
          <Breadcrumbs items={[
            { name: '–ì–ª–∞–≤–Ω–∞—è', path: '/' },
            { name: '–ö–æ—Ä–∑–∏–Ω–∞', path: '/cart' },
          ]} />
          <h1 className={styles.title}>–ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω</h1>
          <div className={styles.successMessage}>
            <p>–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.</p>
            <Link to="/catalog" className={styles.backButton}>
              –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥
            </Link>
          </div>
        </div>
      </>
    )
  }

  if (isCheckout) {
    return (
      <>
        <SEO
          title="–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ | DILAVIA - –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω –º–µ–±–µ–ª–∏"
          description="–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–µ DILAVIA. –í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏ –∏ –æ–ø–ª–∞—Ç—ã. –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –ú–∏–Ω—Å–∫—É. –ì–∞—Ä–∞–Ω—Ç–∏—è 18 –º–µ—Å—è—Ü–µ–≤."
          keywords="–æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞, –¥–æ—Å—Ç–∞–≤–∫–∞ –º–µ–±–µ–ª–∏, –æ–ø–ª–∞—Ç–∞ –º–µ–±–µ–ª–∏, DILAVIA, –∫—É–ø–∏—Ç—å –º–µ–±–µ–ª—å, –∑–∞–∫–∞–∑–∞—Ç—å –º–µ–±–µ–ª—å"
        />
        <div className={styles.container}>
          <Breadcrumbs items={[
            { name: '–ì–ª–∞–≤–Ω–∞—è', path: '/' },
            { name: '–ö–æ—Ä–∑–∏–Ω–∞', path: '/cart' },
            { name: '–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞', path: '/cart/checkout' },
          ]} />
          <h1 className={styles.title}>–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞</h1>

          <div className={styles.cartContent}>
            <form onSubmit={handleSubmit} className={styles.checkoutForm}>
              <div className={styles.formGroup}>
                <label htmlFor="name" className={styles.formLabel}>–§–ò–û</label>
                <input
                  type="text"
                  id="name"
                  name="name"
                  value={formData.name}
                  onChange={handleFormChange}
                  className={`${styles.formInput} ${formErrors.name ? styles.inputError : ''}`}
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è"
                />
                {formErrors.name && <div className={styles.errorMessage}>{formErrors.name}</div>}
              </div>

              <div className={styles.formGroup}>
                <label htmlFor="phone" className={styles.formLabel}>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</label>
                <input
                  type="tel"
                  id="phone"
                  name="phone"
                  value={formData.phone}
                  onChange={handleFormChange}
                  onKeyDown={(e) => {
                    // –†–∞–∑—Ä–µ—à–∞–µ–º: backspace, delete, tab, escape, enter, —Å—Ç—Ä–µ–ª–∫–∏
                    if ([8, 9, 13, 27, 37, 38, 39, 40, 46].includes(e.keyCode)) {
                      return
                    }
                    // –†–∞–∑—Ä–µ—à–∞–µ–º —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã
                    if (!/^\d$/.test(e.key)) {
                      e.preventDefault()
                    }
                  }}
                  className={`${styles.formInput} ${formErrors.phone ? styles.inputError : ''}`}
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
                />
                {formErrors.phone && <div className={styles.errorMessage}>{formErrors.phone}</div>}
              </div>

              <div className={styles.formGroup}>
                <label htmlFor="address" className={styles.formLabel}>–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏</label>
                <input
                  type="text"
                  id="address"
                  name="address"
                  value={formData.address}
                  onChange={handleFormChange}
                  className={`${styles.formInput} ${formErrors.address ? styles.inputError : ''}`}
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω—ã–π –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏"
                />
                {formErrors.address && <div className={styles.errorMessage}>{formErrors.address}</div>}
              </div>

              <div className={styles.formGroup}>
                <label className={styles.formLabel}>–£–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± —Å–≤—è–∑–∏</label>
                <div className={styles.contactMethods}>
                  <label className={`${styles.contactMethod} ${formData.contactMethod === '–¢–µ–ª–µ—Ñ–æ–Ω' ? styles.selected : ''}`}>
                    <input
                      type="radio"
                      name="contactMethod"
                      value="–¢–µ–ª–µ—Ñ–æ–Ω"
                      checked={formData.contactMethod === '–¢–µ–ª–µ—Ñ–æ–Ω'}
                      onChange={handleFormChange}
                    />
                    <span>–ü–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É</span>
                  </label>
                  <label className={`${styles.contactMethod} ${formData.contactMethod === 'telegram' ? styles.selected : ''}`}>
                    <input
                      type="radio"
                      name="contactMethod"
                      value="telegram"
                      checked={formData.contactMethod === 'telegram'}
                      onChange={handleFormChange}
                    />
                    <span>Telegram</span>
                  </label>
                  <label className={`${styles.contactMethod} ${formData.contactMethod === 'whatsapp' ? styles.selected : ''}`}>
                    <input
                      type="radio"
                      name="contactMethod"
                      value="whatsapp"
                      checked={formData.contactMethod === 'whatsapp'}
                      onChange={handleFormChange}
                    />
                    <span>WhatsApp</span>
                  </label>
                  <label className={`${styles.contactMethod} ${formData.contactMethod === 'viber' ? styles.selected : ''}`}>
                    <input
                      type="radio"
                      name="contactMethod"
                      value="viber"
                      checked={formData.contactMethod === 'viber'}
                      onChange={handleFormChange}
                    />
                    <span>Viber</span>
                  </label>
                </div>
              </div>

              {formData.contactMethod === 'telegram' && (
                <div className={styles.formGroup}>
                  <label htmlFor="telegram" className={styles.formLabel}>Telegram</label>
                  <input
                    type="text"
                    id="telegram"
                    name="telegram"
                    value={formData.telegram || ''}
                    onChange={handleFormChange}
                    className={`${styles.formInput} ${formErrors.telegram ? styles.inputError : ''}`}
                    placeholder="@username"
                  />
                  {formErrors.telegram && <div className={styles.errorMessage}>{formErrors.telegram}</div>}
                </div>
              )}

              {formData.contactMethod === 'whatsapp' && (
                <div className={styles.formGroup}>
                  <label htmlFor="whatsapp" className={styles.formLabel}>WhatsApp</label>
                  <input
                    type="text"
                    id="whatsapp"
                    name="whatsapp"
                    value={formData.whatsapp || ''}
                    onChange={handleFormChange}
                    className={`${styles.formInput} ${formErrors.whatsapp ? styles.inputError : ''}`}
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à WhatsApp"
                  />
                  {formErrors.whatsapp && <div className={styles.errorMessage}>{formErrors.whatsapp}</div>}
                </div>
              )}

              {formData.contactMethod === 'viber' && (
                <div className={styles.formGroup}>
                  <label htmlFor="viber" className={styles.formLabel}>Viber</label>
                  <input
                    type="text"
                    id="viber"
                    name="viber"
                    value={formData.viber || ''}
                    onChange={handleFormChange}
                    className={`${styles.formInput} ${formErrors.viber ? styles.inputError : ''}`}
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Viber"
                  />
                  {formErrors.viber && <div className={styles.errorMessage}>{formErrors.viber}</div>}
                </div>
              )}

              <div className={styles.formGroup}>
                <label className={styles.formLabel}>–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</label>
                <div className={styles.paymentMethods}>
                  <label className={`${styles.paymentMethod} ${formData.paymentMethod === '–ö–∞—Ä—Ç–∞' ? styles.selected : ''}`}>
                    <input
                      type="radio"
                      name="paymentMethod"
                      value="–ö–∞—Ä—Ç–∞"
                      checked={formData.paymentMethod === '–ö–∞—Ä—Ç–∞'}
                      onChange={handleFormChange}
                    />
                    <span>–ë–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç–æ–π</span>
                  </label>
                  <label className={`${styles.paymentMethod} ${formData.paymentMethod === '–ù–∞–ª–∏—á–Ω—ã–µ' ? styles.selected : ''}`}>
                    <input
                      type="radio"
                      name="paymentMethod"
                      value="–ù–∞–ª–∏—á–Ω—ã–µ"
                      checked={formData.paymentMethod === '–ù–∞–ª–∏—á–Ω—ã–µ'}
                      onChange={handleFormChange}
                    />
                    <span>–ù–∞–ª–∏—á–Ω—ã–º–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏</span>
                  </label>
                </div>
              </div>

              {formErrors.submit && (
                <div className={styles.errorMessage}>
                  {formErrors.submit}
                </div>
              )}

              <button
                type="submit"
                className={styles.submitButton}
                disabled={isSubmitting}
              >
                {isSubmitting ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑'}
              </button>
            </form>

            <div className={styles.summary}>
              <h2>–í–∞—à –∑–∞–∫–∞–∑</h2>
              {productItems.length > 0 && (
                <>
                  <h3 className={styles.summaryCategory}>–ú–µ–±–µ–ª—å</h3>
                  {productItems.map((item) => (
                    <div key={item.id} className={styles.summaryItem}>
                      <div className={styles.summaryItemInfo}>
                        <span className={styles.summaryItemName}>{item.name} √ó {item.quantity}</span>
                        {item.dimension && (
                          <span className={styles.summaryItemDetail}>–†–∞–∑–º–µ—Ä: {item.dimension.width}x{item.dimension.length} —Å–º</span>
                        )}
                        {item.additionalOption && (
                          <span className={styles.summaryItemDetail}>–ú–µ—Ö–∞–Ω–∏–∑–º: {item.additionalOption.name}</span>
                        )}
                      </div>
                      <span className={styles.summaryItemPrice}>{item.price * item.quantity} BYN</span>
                    </div>
                  ))}
                </>
              )}

              {fabricItems.length > 0 && (
                <>
                  <h3 className={styles.summaryCategory}>–¢–∫–∞–Ω–∏</h3>
                  {fabricItems.map((item) => (
                    <div key={item.id} className={styles.summaryItem}>
                      <div className={styles.summaryItemInfo}>
                        <Link to={`/fabric/${item.id.split('-')[0]}/${item.id.split('-')[1]}`} className={styles.summaryItemName}>{item.name}</Link>
                        {item.configuration?.color && (
                          <span className={styles.summaryItemDetail}>–¶–≤–µ—Ç: {item.configuration.color}</span>
                        )}
                      </div>
                    </div>
                  ))}
                </>
              )}

              {discount > 0 && (
                <div className={styles.summaryRow}>
                  <span>–°–∫–∏–¥–∫–∞:</span>
                  <span className={styles.discount}>-{discount} BYN</span>
                </div>
              )}
              <div className={styles.summaryRow}>
                <span>–ò—Ç–æ–≥–æ:</span>
                <span className={styles.totalPrice}>{totalPrice} BYN</span>
              </div>
            </div>
          </div>
        </div>
      </>
    )
  }

  return (
    <>
      <SEO
        title="–ö–æ—Ä–∑–∏–Ω–∞ | DILAVIA - –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω –º–µ–±–µ–ª–∏"
        description="–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–µ DILAVIA. –î–æ–±–∞–≤–ª—è–π—Ç–µ –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏–µ—Å—è —Ç–æ–≤–∞—Ä—ã, –æ—Ñ–æ—Ä–º–ª—è–π—Ç–µ –∑–∞–∫–∞–∑ —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π –ø–æ –≤—Å–µ–π –ë–µ–ª–∞—Ä—É—Å–∏. –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –ú–∏–Ω—Å–∫—É."
        keywords="–∫–æ—Ä–∑–∏–Ω–∞, –∑–∞–∫–∞–∑ –º–µ–±–µ–ª–∏, –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞, –¥–æ—Å—Ç–∞–≤–∫–∞ –º–µ–±–µ–ª–∏, DILAVIA, –∫—É–ø–∏—Ç—å –º–µ–±–µ–ª—å"
      />
      <div className={styles.container}>
        <Breadcrumbs items={[
          { name: '–ì–ª–∞–≤–Ω–∞—è', path: '/' },
          { name: '–ö–æ—Ä–∑–∏–Ω–∞', path: '/cart' },
        ]} />
        <h1 className={styles.title}>–ö–æ—Ä–∑–∏–Ω–∞</h1>

        <div className={styles.cartContent}>
          <div className={styles.items}>
            {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–∫–∞–Ω–µ–π */}
            {fabricItems.length > 0 && (
              <>
                <h2 className={styles.categoryTitle}>–¢–∫–∞–Ω–∏</h2>
                <div className={styles.fabricItems}>
                  {fabricItems.map((item) => (
                    <div key={item.id} className={styles.fabricItem}>
                      <div className={styles.fabricImage}>
                        <img src={`/${item.image}`} alt={item.name} />
                      </div>

                      <div className={styles.fabricInfo}>
                        <Link to={`/fabric/${item.id.split('-')[0]}/${item.id.split('-')[1]}`} className={styles.fabricName}>{item.name}</Link>
                        {item.configuration?.color && (
                          <span className={styles.fabricColor}>–¶–≤–µ—Ç: {item.configuration.color}</span>
                        )}
                      </div>

                      <button
                        className={styles.removeButton}
                        onClick={() => handleRemove(item.id)}
                      >
                        √ó
                      </button>
                    </div>
                  ))}
                </div>
              </>
            )}

            {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–±—ã—á–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ */}
            {productItems.length > 0 && (
              <>
                {fabricItems.length > 0 && <h2 className={styles.categoryTitle}>–ú–µ–±–µ–ª—å</h2>}
                {productItems.map((item) => (
                  <div key={item.id} className={styles.cartItem}>
                    <div className={styles.itemImage}>
                      <img src={`/${item.image}`} alt={item.name} />
                    </div>

                    <div className={styles.itemInfo}>
                      <Link to={`/product/${item.id}`} className={styles.itemName}>
                        {item.name}
                      </Link>
                      <div className={styles.itemDetails}>
                        {item.dimension && (
                          <span>–†–∞–∑–º–µ—Ä: {item.dimension.width}x{item.dimension.length} —Å–º</span>
                        )}
                        {item.additionalOption && (
                          <span>–û–ø—Ü–∏—è: {item.additionalOption.name}</span>
                        )}
                      </div>
                    </div>

                    <div className={styles.itemPrice}>
                      {item.price} BYN
                    </div>

                    <div className={styles.quantityControl}>
                      <button
                        onClick={() => handleQuantityChange(item.id, item.quantity - 1)}
                        disabled={item.quantity <= 1}
                      >
                        -
                      </button>
                      <span>{item.quantity}</span>
                      <button
                        onClick={() => handleQuantityChange(item.id, item.quantity + 1)}
                      >
                        +
                      </button>
                    </div>

                    <div className={styles.itemTotal}>
                      {item.price * item.quantity} BYN
                    </div>

                    <button
                      className={styles.removeButton}
                      onClick={() => handleRemove(item.id)}
                    >
                      √ó
                    </button>
                  </div>
                ))}
              </>
            )}
          </div>

          <div className={styles.summary}>
            <div className={styles.promoCode}>
              {appliedPromo ? (
                <div className={styles.appliedPromo}>
                  <span>–ü—Ä–æ–º–æ–∫–æ–¥: {appliedPromo}</span>
                  <button onClick={handleRemovePromo} className={styles.removePromo}>
                    √ó
                  </button>
                </div>
              ) : (
                <form onSubmit={handlePromoSubmit} className={styles.promoForm}>
                  <input
                    type="text"
                    value={promoCode}
                    onChange={(e) => setPromoCode(e.target.value)}
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥"
                    className={styles.promoInput}
                  />
                  <button type="submit" className={styles.promoButton}>
                    –ü—Ä–∏–º–µ–Ω–∏—Ç—å
                  </button>
                </form>
              )}
              {promoError && <div className={styles.promoError}>{promoError}</div>}
            </div>

            <div className={styles.summaryRow}>
              <span>–ü–æ–¥—ã—Ç–æ–≥:</span>
              <span>{subtotal} BYN</span>
            </div>
            {discount > 0 && (
              <div className={styles.summaryRow}>
                <span>–°–∫–∏–¥–∫–∞:</span>
                <span className={styles.discount}>-{discount} BYN</span>
              </div>
            )}
            <div className={styles.summaryRow}>
              <span>–ò—Ç–æ–≥–æ:</span>
              <span className={styles.totalPrice}>{totalPrice} BYN</span>
            </div>
            <button
              className={styles.checkoutButton}
              onClick={() => setIsCheckout(true)}
            >
              –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑
            </button>
            <Link to="/catalog" className={styles.continueShopping}>
              –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∫—É–ø–∫–∏
            </Link>
          </div>
        </div>
      </div>
    </>
  )
}
